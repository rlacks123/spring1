<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    <!-- interface 인터페이스 네임 가져옴 -->
<mapper namespace="com.yedam.app.emp.mapper.EmpMapper">
    <!-- 전체조회 --> <!-- id 속성은 자신이 연결될 메소드 --> <!-- resultType는 last타입 -->
    <select id="selectEmpList" 
            resultType="EmpVO">
            SELECT employee_id
                 , first_name
                 , last_name
                 , email
                 , phone_number
                 , hire_date
                 , job_id
                 , salary
                 ,commission_pct
                 , manager_id
                 , department_id
           FROM employees
           ORDER BY employee_id
    
    </select>
    
    <!-- 단건조회 -->
    <select id="selectEmpInfo"
            parameterType="EmpVO" 
            resultType="EmpVO"> <!-- 파라미터는 매개변수라고 생각하면됨 -->
          SELECT employee_id
                , first_name
                , last_name
                , email
                , phone_number
                , hire_date
                , job_id
                , salary
                ,commission_pct
                , manager_id
                , department_id
          FROM employees
          WHERE employee_id = #{employeeId} <!-- 마이바티스 는 ? 말고 #{}씀-->
          <!--  Mybatis => PrepareStatement 프리페어스테잇먼트 -->
          <!-- #{} : parameterType에 선언된 변수의 필드값 --><!-- 값을 불러올땐 파라미터값 에서 표현식 가져옴 -->
          <!-- PrepareStatement -->
    </select>
    
    <!-- 등록 --> <!-- 인서트 에서 SELECT 사용하면안됨 -->
    <insert id="insertEmpInfo"
            parameterType="EmpVO"> <!-- 리절트타입 생략해도됨 인트가 리턴됨 -->
        <selectKey keyProperty="employeeId"
                   resultType="Integer"
                   order="BEFORE"> <!-- 오더는 순서 -->
          SELECT NVL(MAX(employee_id), 100) + 1
          FROM employees
        </selectKey>
        INSERT INTO employees
            (
              employee_id
              , last_name
              , email
              , job_id
              , hire_date
              <if test="salary > 0">
              , salary
              </if> <!--  인썰트 if문 사용시 위아래 두개같이 써야함 (컬럼과 밸류)-->
            )
         VALUES
            (  
               <!--  employees_seq.NEXTVAL--> <!-- 임플로이즈 기반 시퀀스 추가 위에 selectKey사용으로 기존 시퀀스 사용못함 -->
               #{employeeId}
               , #{lastName}
               , #{email}
               , #{jobId}
               <choose> <!-- 츄즈 다중조건문을 위한 태그 서브태그로 웬,아덜와이즈 -->
                   <when test="hireDate != null"> 
                       , #{hireDate}
                   </when>     <!-- true 트루 같은거 -->
                   <otherwise> <!-- 앨즈,폴스 같은거 else -->
                       , sysDate <!-- 시스데이트 사용 -->
                   </otherwise>
               </choose>
               <if test="salary > 0">
               , #{salary}
               </if>
               
            )
          
    </insert>
    
    <!-- 수정 업데이트 -->
    <update id="updateEmpInfo"
            parameterType="EmpVO">
        UPDATE employees
        SET
               last_name = #{lastName}
               <if test="jobId != null and !jobId.equals('')"> <!-- 잡id가 공백이아닐때 -->
               <!-- 특정 조건(test 속성)을 만족할때만 실행되는 구문 -->
               ,job_id = #{jobId}
               </if>
               ,hire_date = #{hireDate}
        WHERE employee_id = #{employeeId}
    </update>
    
    <!-- 삭제 -->
    <delete id="deleteEmpInfo"
            parameterType="int">
            <!-- 객체가 아닌 기본 타입일 경우 매개변수 그대로 사용 -->
         DELETE FROM employees
         WHERE employee_id = #{empId}
        
    </delete>
    
</mapper>